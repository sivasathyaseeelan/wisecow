name: ci/cd

permissions: {}

on:
  push:
    branches:
      - main

env:
  EKS_CLUSTER_NAME: wisecow-demo
  AWS_REGION: ap-south-1

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.WISECOW_GHCR_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ghcr.io/${{ github.repository_owner }}/wisecow:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.30.0' # default is latest stable
      id: install

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{env.AWS_REGION}}

    - name: Update kube config
      run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION

    - name: Deploy to EKS
      run: |
        kubectl apply -f ./manifest/deployment.yaml
        kubectl apply -f ./manifest/service.yaml
    
    - name: Decode and create TLS secret
      env:
        TLS_CRT: ${{ secrets.TLS_CRT }}
        TLS_KEY: ${{ secrets.TLS_KEY }}
      run: |
        echo $TLS_CRT | base64 --decode > tls.crt
        echo $TLS_KEY | base64 --decode > tls.key
        kubectl create secret tls tls-secret --cert=tls.crt --key=tls.key --dry-run=client -o yaml | kubectl apply -f -

    - name: Apply Ingress Configuration
      run: |
        kubectl apply -f ./mainfest/ingress.yaml